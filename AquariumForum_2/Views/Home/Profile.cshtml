@using AquariumForum_2.ViewModels
@model UserProfileViewModel


@{
    ViewData["Title"] = "User Profile";
}

@* @if (Model.User != null) *@
@* { *@
@*     <div class="profile-container"> *@
@*         @if (!string.IsNullOrEmpty(Model.User.ImageFilename)) *@
@*         { *@
@*             <div class="profile-image"> *@
@*                 <img src="~/profile_img/@Model.User.ImageFilename" alt="@Model.User.Name" class="profile-thumbnail-large" /> *@
@*             </div> *@
@*         } *@

@*         <div class="profile-info"> *@
@*             <h1><strong>@Model.User.Name</strong></h1> *@
@*             <h3>@(string.IsNullOrEmpty(Model.User.Location) ? "Location not provided" : Model.User.Location)</h3> *@
@*         </div> *@
@*     </div> *@
@* } *@

@if (Model.User != null)
{
    <div class="profile-container">
        @if (!string.IsNullOrEmpty(Model.User.ImageFilename))
        {
            <div class="profile-image pe-2">
                <img src="~/profile_img/@Model.User.ImageFilename" alt="@Model.User.Name" class="profile-thumbnail-large" />
            </div>
        }

        <div class="profile-info">
            <h1><strong>@Model.User.Name</strong> <br /></h1>
            <h3 style="color: cornflowerblue">
                @if (!string.IsNullOrEmpty(Model.User.Location))
                {
                  

                    @Model.User.Location
                    <i class="fa-solid fa-location-dot"></i>
                }
                else
                {
                    <span>Location not provided</span>
                }
            </h3>
            <p style="color: cornflowerblue">@Model.User.Email</p>
        </div>

    </div>

    <hr />
}



<h3>@Model.User.Name Discussion's</h3>

<div class="masonry-grid">
    @foreach (var item in Model.Discussions)
    {
        <div class="masonry-item">
            <!-- Discussion Image -->
            <div class="img-container">
                @if (!string.IsNullOrEmpty(item.ImageFilename))
                {
                    <img src="~/images/@item.ImageFilename" alt="@item.Title Thumbnail" />
                }
                else
                {
                    <div class="d-flex justify-content-center align-items-center" style="height: 100%; background-color: #f0f0f0;">
                        <span>No Image</span>
                    </div>
                }
            </div>

            <!-- Content Section -->
            <div class="content-container">
                <a asp-action="GetDiscussion" asp-controller="Home" asp-route-id="@item.DiscussionId" class="title">
                    @item.Title
                </a>
                <p class="content-text">@Html.Raw(TruncateWords(item.Content, 20))</p>
                <p class="content-text"><small class="text-muted">@item.CreateDate</small></p>
                <p class="content-text"><small class="text-muted">@item.CommentCount comments</small></p>
            </div>
        </div>
    }
</div>






@functions {
    // Helper method to truncate content to a specified word count
    public string TruncateWords(string content, int wordCount)
    {
        if (string.IsNullOrEmpty(content))
        {
            return string.Empty;
        }

        var words = content.Split(' ');
        if (words.Length <= wordCount)
        {
            return content; // Return the original content if it's within the word limit
        }

        var truncatedContent = string.Join(" ", words.Take(wordCount)) + "..."; // Truncate and add ellipsis
        return truncatedContent;
    }
}

