@{
    ViewData["Title"] = "Home Page";
}

@model IEnumerable<AquariumForum_2.Models.Discussion>

<h1>Discussions</h1>

<div class="masonry-grid">
    @foreach (var item in Model)
    {
        <div class="masonry-item">
            <!-- Image Section -->
            <div class="img-container">
                @if (!string.IsNullOrEmpty(item.ImageFilename))
                {
                    <img src="~/images/@item.ImageFilename" alt="@item.Title Thumbnail" />
                }
                else
                {
                    <div class="d-flex justify-content-center align-items-center" style="height: 250px; background-color: #f0f0f0;">
                        <span>No Image</span>
                    </div>
                }
            </div>

            <!-- Content Section -->
            <div class="content-container">
                <a asp-action="GetDiscussion" asp-controller="Home" asp-route-id="@item.DiscussionId" class="title">
                    @item.Title
                </a>
                <br /> <br />
                <a asp-action="Profile" asp-controller="Home" asp-route-id="@item.ApplicationUserId" class="author-link">
                    By : @item.AuthorName
                </a>
                <p class="content-text">@Html.Raw(TruncateWords(item.Content, 20))</p>
                <p class="content-text"><small>@Html.DisplayFor(modelItem => item.CreateDate)</small></p>
                <p class="content-text"><small>@item.CommentCount comments</small></p>
            </div>
        </div>
    }
</div>




@functions {
    // Helper method to truncate content to a specified word count
    public string TruncateWords(string content, int wordCount)
    {
        if (string.IsNullOrEmpty(content))
        {
            return string.Empty;
        }

        var words = content.Split(' ');
        if (words.Length <= wordCount)
        {
            return content; // Return the original content if it's within the word limit
        }

        var truncatedContent = string.Join(" ", words.Take(wordCount)) + "..."; // Truncate and add ellipsis
        return truncatedContent;
    }
}
