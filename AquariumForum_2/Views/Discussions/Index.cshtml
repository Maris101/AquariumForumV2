@model IEnumerable<AquariumForum_2.Models.Discussion>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create" class="btn btn-primary"><i class="fa-solid fa-plus"></i>&nbsp;Create New</a>

</p>

<table class="table">
    <thead>
        <tr>
            <th>Thumbnail</th>
            <th>@Html.DisplayNameFor(model => model.Title)</th>
            <th>@Html.DisplayNameFor(model => model.Content)</th>
            <th>@Html.DisplayNameFor(model => model.CreateDate)</th>
            <th>Comments</th> <!-- Add this column for comment count -->
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model) {
            <tr>
                <td>
                    @if (!string.IsNullOrEmpty(item.ImageFilename))
                    {
                        <img src="~/images/@item.ImageFilename" alt="@item.Title Thumbnail" style="width: 100px; height: 100px; object-fit: cover;" />
                    }
                    else
                    {
                        <span>No Image</span>
                    }
                </td>
                <td>@Html.DisplayFor(modelItem => item.Title)</td>
                <td>@Html.Raw(TruncateWords(item.Content, 50))</td>
                <td>@Html.DisplayFor(modelItem => item.CreateDate)</td>
                <td>@item.CommentCount</td> <!-- Display the comment count -->
                <td>
                    <a asp-action="Edit" asp-route-id="@item.DiscussionId" class="text-decoration-none">
                        <i class="fa-solid fa-pen-to-square" style="color: black;"></i>
                    </a>

                    <a asp-action="Details" asp-route-id="@item.DiscussionId" class="text-decoration-none">
                        <i class="fa-solid fa-eye" style="color: black;"></i>
                    </a>

                    <a asp-action="Delete" asp-route-id="@item.DiscussionId" class="text-decoration-none">
                        <i class="fa-solid fa-trash" style="color: black;"></i>
                    </a>
                </td>

            </tr>
        }
    </tbody>
</table>

@functions {
    // Helper method to truncate content to a specified word count
    public string TruncateWords(string content, int wordCount)
    {
        if (string.IsNullOrEmpty(content))
        {
            return string.Empty;
        }

        var words = content.Split(' ');
        if (words.Length <= wordCount)
        {
            return content; // Return the original content if it's within the word limit
        }

        var truncatedContent = string.Join(" ", words.Take(wordCount)) + "..."; // Truncate and add ellipsis
        return truncatedContent;
    }
}

